---
// src/pages/product/[id].astro

import data from '../../data/catalog.json';
import Layout from '../../layouts/Layout.astro';

export async function getStaticPaths() {
  return data.products.map((prod) => ({
    params: { id: prod.id },
  }));
}

const { id } = Astro.params;
const product = data.products.find((prod) => prod.id === id);
const category = data.categories.find((cat) => cat.id === product?.category);
---
<Layout>
  <div class="w-full flex flex-col mt-4">
    <div class="w-full flex items-center justify-center">
      <img src={category?.logo} alt={category?.title} class="w-60" />
    </div>
    <h2 class="text-2xl font-bold ml-30 mt-4">
      <a href="/categories">PRODUCTOS/</a>
      <a href={`/category/${category?.id}`} class="text-secundario">{category?.title}</a>
    </h2>

    <!-- Main content -->
    <div class="flex flex-col lg:flex-row items-start justify-center gap-10 mt-10">
      <!-- Product image -->
      <img
        src={product?.images[0]}
        alt={product?.title}
        class="h-[55vh] w-auto object-contain rounded-xl "
        transition:name={product?.id}
      />

      <!-- Details card -->
      <div
        id="prod-detail"
        class="bg-gray-200 flex flex-col justify-between p-10 rounded-2xl max-w-3xl w-full"
      >
        <!-- Title & description -->
        <div>
          <h1 class="text-4xl text-principal font-bold text-center mb-4">
            {product?.title}
          </h1>
          <p class="text-principal font-light text-lg leading-relaxed text-justify">
            {product?.description}
          </p>
        </div>

        <!-- Options -->
        <div class="mt-8 space-y-6">
          <!-- Sizes -->
          <div class="flex items-center">
            <span class="font-semibold text-lg text-principal mr-4">Talla:</span>
            <div class="flex items-center gap-3">
              {(product?.options || [])
                .find((o) => o.name === 'Talla')
                ?.values.map((val) => (
                  <button
                    data-type="talla"
                    data-value={val}
                    class="
                      size-btn
                      w-8 h-8 rounded-full border-2
                      border-gray-400
                      flex items-center justify-center
                      hover:border-secundario
                      transition
                    "
                    title={val}
                  >
                    <span class="text-sm font-medium">{val}</span>
                  </button>
                ))}
            </div>
          </div>

          <!-- Colors -->
          <div class="flex items-center">
            <span class="font-semibold text-lg text-principal mr-4">Color:</span>
            <div class="flex items-center gap-6">
              {(product?.options || [])
                .find((o) => o.name === 'Color')
                ?.values.map((val) => (
                  <button
                    data-type="color"
                    data-value={val}
                    class="
                      color-btn
                      w-6 h-6 rounded-full border-2
                      border-gray-400
                      transition
                    "
                    title={val}
                    style={`background-color: ${
                      val === 'Negro' ? '#000' : val === 'Café' ? '#5C3A21' : '#CCC'
                    };`}
                  />
                ))}
            </div>
          </div>
        </div>

        <!-- Price -->
        <p class="text-2xl font-bold text-secundario text-center my-8">
          USD$ {product?.basePrice.toFixed(2)}
        </p>

        <!-- Action buttons -->
        <div class="flex gap-6 justify-center">
          <button
            class="
              bg-secundario hover:bg-yellow-600
              text-white font-bold
              py-3 px-8
              rounded-lg
              transition
            "
            id="buy-btn"
          >
            COMPRAR
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- inline script to sync query params and UI -->
  <script>
  document.addEventListener('DOMContentLoaded', () => {
    const params = new URLSearchParams(window.location.search);

    function paintSelection() {
      const talla = params.get('talla');
      const color = params.get('color');

      document.querySelectorAll<HTMLButtonElement>('.size-btn').forEach(btn => {
        btn.classList.toggle('border-secundario', btn.dataset.value === talla);
      });
      document.querySelectorAll<HTMLButtonElement>('.color-btn').forEach(btn => {
        btn.classList.toggle('border-secundario', btn.dataset.value === color);
      });
    }

    paintSelection();

    document
      .querySelectorAll<HTMLButtonElement>('.size-btn, .color-btn')
      .forEach(btn => {
        btn.addEventListener('click', () => {
          const { type, value } = btn.dataset;
          if (type && value) {
            params.set(type, value);
            window.history.replaceState({}, '', `${location.pathname}?${params}`);
            paintSelection();
          }
        });
      });
      const WA_NUMBER = '593999762586';
    const buyBtn = document.getElementById('buy-btn');
    if (buyBtn) {
      buyBtn.addEventListener('click', () => {
        const title = buyBtn.dataset.title || 'producto';
        const talla = params.get('talla');
        const color = params.get('color');

        let msg = `Hola, me interesa el ${title}`;
        if (talla) msg += `, talla: ${talla}`;
        if (color) msg += `, color: ${color}`;
        msg += `. ¿Me podrías dar más info?`;

        const waUrl = `https://wa.me/${WA_NUMBER}?text=${encodeURIComponent(msg)}`;
        window.open(waUrl, '_blank');
      });
    }
  });
  
</script>

</Layout>
